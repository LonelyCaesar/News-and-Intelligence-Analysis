require(devtools)
install_github("lchiffon/wordcloud2")
library(wordcloud2)
wordcloud2(data = demoFreq)
head(demoFreq)
wordcloud2(demoFreq, color = "random-light", backgroundColor = "grey")
wordcloud2(demoFreq, minRotation = -pi/6, maxRotation = -pi/6, minSize = 10,
rotateRatio = 1)
figPath = system.file("examples/t.png",package = "wordcloud2")
wordcloud2(demoFreq, figPath = figPath, size = 1.5,color = "skyblue")
letterCloud(demoFreq, word = "R", size = 2)
letterCloud(demoFreq, word = "OK", size = 2)
letterCloud(demoFreq, word = "R", size = 2)
letterCloud(demoFreq, word = "OK", size = 2)
letterCloud(demoFreq, word = "WORDCLOUD2", wordSize = 1)
letterCloud(demoFreq, word = "OK", size = 2)
letterCloud(demoFreq, word = "OK", size = 2)
letterCloud(demoFreq, word = "OK", size = 2)
letterCloud(demoFreq, word = "OK", size = 2)
letterCloud(demoFreq, word = "OK", size = 2)
letterCloud(demoFreq, word = "OK", size = 2)
letterCloud(demoFreq, word = "OK", size = 2)
letterCloud(demoFreq, word = "OK", size = 2)
letterCloud(demoFreq, word = "OK", size = 2)
letterCloud(demoFreq, word = "OK", size = 2)
letterCloud(demoFreq, word = "OK", size = 2)
letterCloud(demoFreq, word = "OK", size = 2)
letterCloud(demoFreq, word = "OK", size = 2)
letterCloud(demoFreq, word = "OK", size = 2)
letterCloud(demoFreq, word = "OK", size = 2)
letterCloud(demoFreq, word = "OK", size = 2)
letterCloud(demoFreq, word = "OK", size = 2)
letterCloud(demoFreq, word = "OK", size = 2)
letterCloud(demoFreq, word = "OK", size = 2)
letterCloud(demoFreq, word = "OK", size = 2)
letterCloud(demoFreq, word = "OK", size = 2)
letterCloud(demoFreq, word = "OK", size = 2)
letterCloud(demoFreq, word = "OK", size = 2)
letterCloud(demoFreq, word = "OK", size = 2)
letterCloud(demoFreq, word = "OK", size = 2)
letterCloud(demoFreq, word = "OK", size = 2)
letterCloud(demoFreq, word = "OK", size = 2)
letterCloud(demoFreq, word = "OK", size = 2)
letterCloud(demoFreq, word = "OK", size = 2)
letterCloud(demoFreq, word = "OK", size = 2)
letterCloud(demoFreq, word = "OK", size = 2)
letterCloud(demoFreq, word = "OK", size = 2)
letterCloud(demoFreq, word = "OK", size = 2)
letterCloud(demoFreq, word = "OK", size = 2)
letterCloud(demoFreq, word = "OK", size = 2)
letterCloud(demoFreq, word = "OK", size = 2)
letterCloud(demoFreq, word = "OK", size = 2)
letterCloud(demoFreq, word = "OK", size = 2)
letterCloud(demoFreq, word = "WORDCLOUD2", wordSize = 1)
# 第二代文字雲
letterCloud(freq_ch, word = "WORDCLOUD2", wordSize = 1)
library(jiebaR)
library(wordcloud) # 第一代文字雲
library(wordcloud2) # 第二代文字雲
library( RColorBrewer)
ch_news = c("2020Q1房市走向 57%消費者擔心餘屋賣壓
2019年房市明顯回溫，根據永慶房產集團調查顯示，針對2020年第1季房市走向，全台有57％消費者擔心餘屋帶來房市賣壓，其中這群消費者有67%擔心桃園市，68%擔心高雄，不過，民眾依舊認為房地產仍是消費者資金避險的首選，占比雖較上一季略減，但依舊有32%。
永慶調查結果顯示，全台共57%消費者擔心大量餘屋帶來房市賣壓，擔憂情緒最高的落在高雄市，占比達到68%，其次是桃園市的67%，台北市及台中市則分別達到58%、57%，台南市民擔憂情緒占比只有42%。
不過，在房市低利、高成數的購屋條件下，調查結果顯示，消費者依舊認為房地產是資金避險的首選，雖然占比略降3個百分點，但仍有32%占比，遠高於排名第二位、占比25%的黃金，以及占比18%的定存。
永慶房產集團業務總經理葉凌棋表示，2020年國內經濟持續緩步復甦，同時有台商回流、轉單效應發酵，今年經濟前景值得期待，但仍有貿易戰、超額供給與房市政策三大變數，加上自住仍是市場主流，房價缺乏上漲動能，來賣壓是否能穩定去化，成為2020年房市交易值得觀察重點。") # 匯入新聞
new_terms = c("巴摩拉城堡", "菲立普親王", "染疫", "伊麗莎白二世")
writeLines(new_terms, '/Users/hello/Documents/R/ch_terms.txt') # 自訂字典,請輸入自己的路徑
stopwords = c( "在","的","上", "下","是", "個","來","為","亦","或", "之", "與", "於", "用", "都", "等", "日", "月", "年", "週", "嗎", "以", "就", "但", "及", "也", "了", "要", "不", "會", "和", "對", "著", "後", "她", "他")
writeLines(stopwords, '/Users/hello/Documents/R/ch_stopwords.txt') # 自訂停用詞,請輸入自己的路徑
cutter = worker(user='/Users/hello/Documents/R/ch_terms.txt', stop_word = '/Users/hello/Documents/R/ch_stopwords.txt') # 引用字典和停用詞,請輸入自己的路徑
ch_news <- gsub("[0-9a-zA-Z]+?", "", ch_news) # 刪除數字和字母
ch_news <- cutter[ch_news] # 斷詞
freq_ch <- sort(table(ch_news), T)
freq_ch = as.data.frame(freq_ch)
colnames(freq_ch) <- c("Words", "Freq") # 字頻表
head(freq_ch, 10) # 查看前10筆資料
par(family=("DFHsiu-W3-WINP-BF")) # 設定字體 Mac
customed_colors = c("#000080", "#ffff00", "#6495ed", "#00bfff", "#87cefa", "#db7093", "#ba55d3", "#b22222", "#008080", "#ff8c00", "#6b8e23") # 顏色
ch_wordcloud = wordcloud(freq_ch$Words, freq_ch$Freq, min.freq = 2, random.order = F, ordered.colors = F, colors = customed_colors); ch_wordcloud # 第一代文字雲
ch_wordcloud2 = wordcloud2(freq_ch, size = 1.3, color = customed_colors, backgroundColor="white"); ch_wordcloud2
# 第二代文字雲
letterCloud(freq_ch, word = "WORDCLOUD2", wordSize = 1)
# 第二代文字雲
letterCloud(freq_ch, word = "WORDCLOUD2", wordSize = 1)
# 第二代文字雲
letterCloud(freq_ch, word = "WORDCLOUD2", wordSize = 1)
letterCloud(freq_ch, word = "WORDCLOUD2", wordSize = 1)
letterCloud(freq_ch, word = "WORDCLOUD2", wordSize = 1)
letterCloud(freq_ch, word = "WORDCLOUD2", wordSize = 1)
letterCloud(freq_ch, word = "WORDCLOUD2", wordSize = 1)
letterCloud(freq_ch, word = "WORDCLOUD2", wordSize = 1)
letterCloud(freq_ch, word = "WORDCLOUD2", wordSize = 1)
letterCloud(freq_ch, word = "WORDCLOUD2", wordSize = 1)
letterCloud(freq_ch, word = "WORDCLOUD2", wordSize = 1)
letterCloud(freq_ch, word = "WORDCLOUD2", wordSize = 1)
letterCloud(freq_ch, word = "WORDCLOUD2", wordSize = 1)
letterCloud(freq_ch, word = "WORDCLOUD2", wordSize = 1)
letterCloud(freq_ch, word = "WORDCLOUD2", wordSize = 1)
letterCloud(freq_ch, word = "WORDCLOUD2", wordSize = 1)
letterCloud(freq_ch, word = "WORDCLOUD2", wordSize = 1)
letterCloud(freq_ch, word = "WORDCLOUD2", wordSize = 1)
letterCloud(freq_ch, word = "WORDCLOUD2", wordSize = 1)
letterCloud(freq_ch, word = "WORDCLOUD2", wordSize = 1)
letterCloud(freq_ch, word = "WORDCLOUD2", wordSize = 1)
letterCloud(freq_ch, word = "WORDCLOUD2", wordSize = 1)
letterCloud(freq_ch, word = "WORDCLOUD2", wordSize = 1)
letterCloud(freq_ch, word = "WORDCLOUD2", wordSize = 1)
letterCloud(freq_ch, word = "WORDCLOUD2", wordSize = 1)
letterCloud(freq_ch, word = "WORDCLOUD2", wordSize = 1)
letterCloud(freq_ch, word = "WORDCLOUD2", wordSize = 1)
library(jiebaR)
library(wordcloud) # 第一代文字雲
library(wordcloud2) # 第二代文字雲
library( RColorBrewer)
ch_news = c("2020Q1房市走向 57%消費者擔心餘屋賣壓
2019年房市明顯回溫，根據永慶房產集團調查顯示，針對2020年第1季房市走向，全台有57％消費者擔心餘屋帶來房市賣壓，其中這群消費者有67%擔心桃園市，68%擔心高雄，不過，民眾依舊認為房地產仍是消費者資金避險的首選，占比雖較上一季略減，但依舊有32%。
永慶調查結果顯示，全台共57%消費者擔心大量餘屋帶來房市賣壓，擔憂情緒最高的落在高雄市，占比達到68%，其次是桃園市的67%，台北市及台中市則分別達到58%、57%，台南市民擔憂情緒占比只有42%。
不過，在房市低利、高成數的購屋條件下，調查結果顯示，消費者依舊認為房地產是資金避險的首選，雖然占比略降3個百分點，但仍有32%占比，遠高於排名第二位、占比25%的黃金，以及占比18%的定存。
永慶房產集團業務總經理葉凌棋表示，2020年國內經濟持續緩步復甦，同時有台商回流、轉單效應發酵，今年經濟前景值得期待，但仍有貿易戰、超額供給與房市政策三大變數，加上自住仍是市場主流，房價缺乏上漲動能，來賣壓是否能穩定去化，成為2020年房市交易值得觀察重點。") # 匯入新聞
new_terms = c("巴摩拉城堡", "菲立普親王", "染疫", "伊麗莎白二世")
writeLines(new_terms, '/Users/hello/Documents/R/ch_terms.txt') # 自訂字典,請輸入自己的路徑
stopwords = c( "在","的","上", "下","是", "個","來","為","亦","或", "之", "與", "於", "用", "都", "等", "日", "月", "年", "週", "嗎", "以", "就", "但", "及", "也", "了", "要", "不", "會", "和", "對", "著", "後", "她", "他")
writeLines(stopwords, '/Users/hello/Documents/R/ch_stopwords.txt') # 自訂停用詞,請輸入自己的路徑
cutter = worker(user='/Users/hello/Documents/R/ch_terms.txt', stop_word = '/Users/hello/Documents/R/ch_stopwords.txt') # 引用字典和停用詞,請輸入自己的路徑
ch_news <- gsub("[0-9a-zA-Z]+?", "", ch_news) # 刪除數字和字母
ch_news <- cutter[ch_news] # 斷詞
freq_ch <- sort(table(ch_news), T)
freq_ch = as.data.frame(freq_ch)
colnames(freq_ch) <- c("Words", "Freq") # 字頻表
head(freq_ch, 10) # 查看前10筆資料
par(family=("DFHsiu-W3-WINP-BF")) # 設定字體 Mac
customed_colors = c("#000080", "#ffff00", "#6495ed", "#00bfff", "#87cefa", "#db7093", "#ba55d3", "#b22222", "#008080", "#ff8c00", "#6b8e23") # 顏色
ch_wordcloud = wordcloud(freq_ch$Words, freq_ch$Freq, min.freq = 2, random.order = F, ordered.colors = F, colors = customed_colors); ch_wordcloud # 第一代文字雲
ch_wordcloud2 = wordcloud2(freq_ch, size = 1.3, color = customed_colors, backgroundColor="white"); ch_wordcloud2
# 第二代文字雲
letterCloud(freq_ch, word = "WORDCLOUD2", wordSize = 1)
# 第二代文字雲
letterCloud(freq_ch, word = "WORDCLOUD2", wordSize = 1)
head(freq_ch) # 查看前10筆資料
require(devtools)
install_github("lchiffon/wordcloud2")
library(wordcloud2)
wordcloud2(data = demoFreq)
head(demoFreq)
wordcloud2(demoFreq, color = "random-light", backgroundColor = "grey")
wordcloud2(demoFreq, minRotation = -pi/6, maxRotation = -pi/6, minSize = 10,
rotateRatio = 1)
figPath = system.file("examples/t.png",package = "wordcloud2")
wordcloud2(demoFreq, figPath = figPath, size = 1.5,color = "skyblue")
letterCloud(demoFreq, word = "R", size = 2)
letterCloud(demoFreq, word = "R", size = 2)
letterCloud(demoFreq, word = "R", size = 2)
letterCloud(demoFreq, word = "R", size = 2)
letterCloud(demoFreq, word = "R", size = 2)
letterCloud(demoFreq, word = "R", size = 2)
letterCloud(demoFreq, word = "R", size = 2)
letterCloud(demoFreq, word = "R", size = 2)
letterCloud(demoFreq, word = "R", size = 2)
letterCloud(demoFreq, word = "R", size = 2)
letterCloud(demoFreq, word = "R", size = 2)
letterCloud(demoFreq, word = "OK", size = 2)
letterCloud(demoFreq, word = "OK", size = 2)
letterCloud(demoFreq, word = "OK", size = 2)
letterCloud(demoFreq, word = "OK", size = 2)
letterCloud(demoFreq, word = "OK", size = 2)
letterCloud(demoFreq, word = "OK", size = 2)
letterCloud(demoFreq, word = "OK", size = 2)
letterCloud(demoFreq, word = "OK", size = 2)
letterCloud(demoFreq, word = "OK", size = 2)
letterCloud(demoFreq, word = "OK", size = 2)
letterCloud(demoFreq, word = "OK", size = 2)
letterCloud(demoFreq, word = "OK", size = 2)
letterCloud(demoFreq, word = "OK", size = 2)
letterCloud(demoFreq, word = "OK", size = 2)
letterCloud(demoFreq, word = "OK", size = 2)
letterCloud(demoFreq, word = "OK", size = 2)
letterCloud(demoFreq, word = "OK", size = 2)
letterCloud(demoFreq, word = "OK", size = 2)
letterCloud(demoFreq, word = "OK", size = 2)
letterCloud(demoFreq, word = "OK", size = 2)
install.packages("rJava")
install.packages("jiebaR")
# 範例文章
content <- c("辣台妹", "蔡英文", "賴清德", "威廉賴", "韓國瑜", "朱立倫", "黃捷",  "陳其邁",
"自經區", "柯文哲", "小馬", "扁", "阿扁", "陳水扁",  "時力", "黃捷",
"吳敦義", "潘恆旭", "潘孟安",  "旗津", "中和", "板橋", "新北", "高雄",
"春吶", "中共", "藍委", "綠委", "盧秀燕", "侯友宜", "王金平", "羅文嘉", "民進黨",
"國民黨", "高嘉瑜", "習近平", "傅崐萁", "韓粉", "小英", "韓黑", "張琍敏", "前總統",
"陳柏惟", "江啟臣", "李佳芬", "蔡政府", "神隱", "王定宇",  "亡國感", "打馬悍將",
"臉書社團", "陳菊", "噓爆", "台中", "陳致中", "踢爆", "趙天麟", "鹽埕", "苓雅",
"前金", "香川縣", "瀨戶內", "蔡壁如", "今年度", "時代力量", "芒果乾", "反送中",
"台東", "連儂牆", "陳家欽", "鴻海", "新北市", "台北", "陳佩琪"
)
# 範例文章
content <- c("辣台妹", "蔡英文", "賴清德", "威廉賴", "韓國瑜", "朱立倫", "黃捷",  "陳其邁",
"自經區", "柯文哲", "小馬", "扁", "阿扁", "陳水扁",  "時力", "黃捷",
"吳敦義", "潘恆旭", "潘孟安",  "旗津", "中和", "板橋", "新北", "高雄",
"春吶", "中共", "藍委", "綠委", "盧秀燕", "侯友宜", "王金平", "羅文嘉", "民進黨",
"國民黨", "高嘉瑜", "習近平", "傅崐萁", "韓粉", "小英", "韓黑", "張琍敏", "前總統",
"陳柏惟", "江啟臣", "李佳芬", "蔡政府", "神隱", "王定宇",  "亡國感", "打馬悍將",
"臉書社團", "陳菊", "噓爆", "台中", "陳致中", "踢爆", "趙天麟", "鹽埕", "苓雅",
"前金", "香川縣", "瀨戶內", "蔡壁如", "今年度", "時代力量", "芒果乾", "反送中",
"台東", "連儂牆", "陳家欽", "鴻海", "新北市", "台北", "陳佩琪"
)
# 範例文章
content <- c("辣台妹", "蔡英文", "賴清德", "威廉賴", "韓國瑜", "朱立倫", "黃捷",  "陳其邁",
"自經區", "柯文哲", "小馬", "扁", "阿扁", "陳水扁",  "時力", "黃捷",
"吳敦義", "潘恆旭", "潘孟安",  "旗津", "中和", "板橋", "新北", "高雄",
"春吶", "中共", "藍委", "綠委", "盧秀燕", "侯友宜", "王金平", "羅文嘉", "民進黨",
"國民黨", "高嘉瑜", "習近平", "傅崐萁", "韓粉", "小英", "韓黑", "張琍敏", "前總統",
"陳柏惟", "江啟臣", "李佳芬", "蔡政府", "神隱", "王定宇",  "亡國感", "打馬悍將",
"臉書社團", "陳菊", "噓爆", "台中", "陳致中", "踢爆", "趙天麟", "鹽埕", "苓雅",
"前金", "香川縣", "瀨戶內", "蔡壁如", "今年度", "時代力量", "芒果乾", "反送中",
"台東", "連儂牆", "陳家欽", "鴻海", "新北市", "台北", "陳佩琪"
)
cutter <- worker(bylines = F)
# 使用斷詞器斷詞(有兩種寫法)
#segment(content, cutter)
cutter[content]
new_words <- c("林昶佐","探勘井","頁岩油","輕值原油", "蕭煌奇")
# 一次只能加入一個詞，常常需要搭配迴圈使用
for (i in 1:length(new_words)) {
new_user_word(cutter, new_words[i])
}
content <- str_remove_all(content, "[0-9a-zA-Z]+?")
cutter[content]
# 匯出新詞
new_words <- c("林昶佐","探勘井","頁岩油","輕值原油", "蕭煌奇")
writeLines(new_words, "new_words.txt")
# 設定停止詞
stop_words <- c("在","的","下","個","來","至","座","亦","與","或","日","月","年","週")
writeLines(stop_words, "stop_words.txt")
# 重新定義斷詞器，匯入停止詞
cutter <- worker(user = "new_words.txt", stop_word = "stop_words.txt", bylines = FALSE)
# 計算詞彙頻率
txt_freq <- freq(seg_words)
# 由大到小排列
txt_freq <- arrange(txt_freq, desc(freq))
# 檢查前5名
head(txt_freq)
par(family=("NotoSansCJKtc-Medium")) #一般wordcloud需要定義字體，不然會無法顯示中文
# 一般的文字雲 (pkg: wordcloud)
wordcloud(txt_freq$char, txt_freq$freq, min.freq = 2, random.order = F, ordered.colors = F, colors = rainbow(nrow(txt_freq)))
seg_words <- cutter[content]
seg_words
# 互動式文字雲 (pkg: wordcloud2)
wordcloud2(filter(txt_freq, freq > 1),
minSize = 2, fontFamily = "NotoSansCJKtc-Medium", size = 1)
library(jiebaR)
library(wordcloud) # 第一代文字雲
library(wordcloud2) # 第二代文字雲
library( RColorBrewer)
ch_news = c("請在txt內複製貼上新聞") # 匯入新聞
new_terms = c("鄉鎮縣市", "民意代表", "店家", "買賣交屋")
writeLines(new_terms, '/Users/hello/Documents/R/ch_terms.txt') # 自訂字典,請輸入自己的路徑
stopwords = c( "在","的","上", "下","是", "個","來","為","亦","或", "之", "與", "於", "用", "都", "等", "日", "月", "年", "週", "嗎", "以", "就", "但", "及", "也", "了", "要", "不", "會", "和", "對", "著", "後", "她", "他")
writeLines(stopwords, '/Users/hello/Documents/R/ch_stopwords.txt') # 自訂停用詞,請輸入自己的路徑
cutter = worker(user='/Users/hello/Documents/R/ch_terms.txt', stop_word = '/Users/hello/Documents/R/ch_stopwords.txt') # 引用字典和停用詞,請輸入自己的路徑
ch_news <- gsub("[0-9a-zA-Z]+?", "", ch_news) # 刪除數字和字母
ch_news <- cutter[ch_news] # 斷詞
freq_ch <- sort(table(ch_news), T)
freq_ch = as.data.frame(freq_ch)
colnames(freq_ch) <- c("Words", "Freq") # 字頻表
head(freq_ch) # 查看前10筆資料
par(family=("NotoSansCJKtc-Medium")) # 設定字體 Mac
customed_colors = c("#000080", "#ffff00", "#6495ed", "#00bfff", "#87cefa", "#db7093", "#ba55d3", "#b22222", "#008080", "#ff8c00", "#6b8e23") # 顏色
ch_wordcloud = wordcloud(freq_ch$Words, freq_ch$Freq, min.freq = 2, random.order = F, ordered.colors = F, colors = customed_colors); ch_wordcloud # 第一代文字雲
ch_wordcloud2 = wordcloud2(freq_ch, size = 1.3, color = customed_colors, backgroundColor="white"); ch_wordcloud2
letterCloud(freq_ch,'OK',size = 1)
letterCloud(freq_ch,'OK',size = 1)
letterCloud(freq_ch,'OK',size = 1)
letterCloud(freq_ch,'OK',size = 0.50)
letterCloud(freq_ch,'OK',size = 0.50)
letterCloud(freq_ch,'OK',size = 0.50)
letterCloud(freq_ch,'OK',size = 0.50)
letterCloud(freq_ch,'OK',size = 0.50)
letterCloud(freq_ch,'OK',size = 0.50)
letterCloud(freq_ch,'OK',size = 0.50)
letterCloud(freq_ch,'OK',size = 0.50)
letterCloud(freq_ch,'OK',size = 0.50)
letterCloud(freq_ch,'OK',size = 0.50)
letterCloud(freq_ch,'OK',size = 0.50)
letterCloud(freq_ch,'OK',size = 0.50)
letterCloud(freq_ch,'OK',size = 0.50)
letterCloud(freq_ch,'OK',size = 0.50)
letterCloud(freq_ch,'R',size = 0.50)
letterCloud(freq_ch,'OK',size = 0.50)
letterCloud(freq_ch,'OK',size = 0.50)
letterCloud(freq_ch,'OK',size = 0.50)
letterCloud(freq_ch,'R',size = 0.50)
letterCloud(freq_ch,'OK',size = 0.50)
letterCloud(freq_ch,'R',size = 0.50)
letterCloud(freq_ch,'OK',size = 0.50)
